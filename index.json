[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/adt/Leaf.js",
    "content": "import {BLACK} from '../color/BLACK.js';\n\n/**\n * A black leaf node.\n *\n * @constructor\n * @param {Node} parent - The parent node in the tree.\n * @returns {Leaf}\n */\nexport function Leaf(parent) {\n\tthis._color = BLACK;\n\tthis.parent = parent;\n}\n\n/**\n * Returns <code>true</code> if the <code>Leaf</code> object is a leaf. This\n * always returns <code>true</code>.\n *\n * @returns {Boolean}\n */\nLeaf.prototype.isLeaf = function () {\n\treturn true;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/adt/Leaf.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "Leaf",
    "memberof": "src/adt/Leaf.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/adt/Leaf.js~Leaf",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/adt/Leaf.js",
    "importStyle": "{Leaf}",
    "description": "A black leaf node.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{Leaf}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "The parent node in the tree."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Leaf"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "isLeaf",
    "memberof": "src/adt/Leaf.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/adt/Leaf.js~isLeaf",
    "access": "public",
    "export": false,
    "importPath": "@aureooms/js-red-black-tree/src/adt/Leaf.js",
    "importStyle": null,
    "description": "Returns <code>true</code> if the <code>Leaf</code> object is a leaf. This\nalways returns <code>true</code>.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/adt/Node.js",
    "content": "import {Leaf} from './Leaf.js';\n\n/**\n * An internal node. This node can be red or black.\n *\n * @constructor\n * @param {Number} color - The color of the node.\n * @param {Key} key - The key of the node.\n * @returns {Node}\n */\nexport function Node(color, key) {\n\tthis._color = color;\n\tthis.left = new Leaf(this);\n\tthis.right = new Leaf(this);\n\tthis.parent = null;\n\tthis.key = key;\n}\n\n/**\n * Returns <code>true</code> if the <code>Node</code> object is a leaf. This\n * always returns <code>false</code>.\n *\n * @returns {Boolean}\n */\nNode.prototype.isLeaf = function () {\n\treturn false;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/adt/Node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "Node",
    "memberof": "src/adt/Node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/adt/Node.js~Node",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/adt/Node.js",
    "importStyle": "{Node}",
    "description": "An internal node. This node can be red or black.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "The color of the node."
      },
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key of the node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "isLeaf",
    "memberof": "src/adt/Node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/adt/Node.js~isLeaf",
    "access": "public",
    "export": false,
    "importPath": "@aureooms/js-red-black-tree/src/adt/Node.js",
    "importStyle": null,
    "description": "Returns <code>true</code> if the <code>Node</code> object is a leaf. This\nalways returns <code>false</code>.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/adt/RedBlackTree.js",
    "content": "import {Node} from './Node.js';\nimport {BLACK, RED} from '../color/index.js';\nimport {predecessor} from '../family/predecessor.js';\nimport {insert, insert_case2} from '../insertion/index.js';\nimport {delete_one_child} from '../deletion/index.js';\nimport {search} from '../search/index.js';\nimport {inordertraversal, rangetraversal} from '../traversal/index.js';\n\n/**\n * A RedBlackTree with key-only nodes.\n *\n */\nexport class RedBlackTree {\n\t/**\n\t * Constructs a new empty red-black tree.\n\t *\n\t * @param {Function} compare - The comparison function for node keys.\n\t * @returns {RedBlackTree}\n\t */\n\tconstructor(compare) {\n\t\tthis.compare = compare;\n\t\tthis.root = null;\n\t}\n\n\t/**\n\t * Tells whether the tree is empty.\n\t *\n\t * @returns {boolean} true if empty, false otherwise.\n\t */\n\tisEmpty() {\n\t\treturn this.root === null;\n\t}\n\n\t/**\n\t * Adds a key to the tree.\n\t *\n\t * @param {Key} key - The key to add.\n\t */\n\tadd(key) {\n\t\tif (this.root === null) {\n\t\t\tthis.root = new Node(BLACK, key);\n\t\t} else {\n\t\t\tconst node = new Node(RED, key);\n\t\t\tinsert(this.compare, this.root, node);\n\t\t\tinsert_case2(node);\n\t\t}\n\t}\n\n\t/**\n\t * Search for the input key in the tree.\n\t * Returns the first node whose key equals the input key.\n\t * If no such node exists, returns <code>null</code>.\n\t *\n\t * @param {Key} key - The input key.\n\t * @returns {Node}\n\t */\n\t_search(key) {\n\t\tif (this.root === null) return null;\n\t\treturn search(this.compare, this.root, key);\n\t}\n\n\t/**\n\t * Search for the input key in the tree. Returns the first node key found\n\t * in this way (with {@link RedBlackTree#_search}. If no such key exists\n\t * in the tree, returns <code>null</code>.\n\t *\n\t * @param {Key} key - The input key.\n\t * @returns {Key}\n\t */\n\tget(key) {\n\t\tconst node = this._search(key);\n\t\treturn node === null ? null : node.key;\n\t}\n\n\t/**\n\t * Returns <code>true</code> if and only if the tree contains the input\n\t * key.\n\t *\n\t * @param {Key} key - The input key.\n\t * @returns {Boolean}\n\t */\n\thas(key) {\n\t\treturn this._search(key) !== null;\n\t}\n\n\t/**\n\t * Deletes the input node from the tree.\n\t *\n\t * @param {Node} node - The input node to delete.\n\t */\n\t_delete(node) {\n\t\tif (!node.left.isLeaf()) {\n\t\t\t// Replace node's key with predecessor's key\n\t\t\tconst pred = predecessor(node);\n\t\t\tnode.key = pred.key;\n\t\t\t// Delete predecessor node\n\t\t\t// note: this node can only have one non-leaf child\n\t\t\t//       because the tree is a red-black tree\n\t\t\tdelete_one_child(pred);\n\t\t} else if (!node.right.isLeaf()) {\n\t\t\t// Replace node's key with successor's key\n\t\t\t// If there is no left child, then there can only be one right\n\t\t\t// child.\n\t\t\tconst succ = node.right;\n\t\t\tnode.key = succ.key;\n\t\t\t// Delete successor node\n\t\t\t// note: this node can only have one non-leaf child\n\t\t\t//       because the tree is a red-black tree\n\t\t\tdelete_one_child(succ);\n\t\t} else if (node === this.root) {\n\t\t\tthis.root = null;\n\t\t} else {\n\t\t\tdelete_one_child(node);\n\t\t}\n\t}\n\n\t/**\n\t * Search for the first node of the tree whose key equals the input key\n\t * (with {@link RedBlackTree#_search}), then delete that node\n\t * (with {@link RedBlackTree#_delete}). If such a node is found and deleted\n\t * then return <code>true</code>. Return <code>false</code> otherwise.\n\t *\n\t * @param {Key} key - The input key.\n\t * @returns {Boolean} - Whether the key existed in the tree before removal.\n\t */\n\tremove(key) {\n\t\tconst node = this._search(key);\n\t\tif (node === null) return false;\n\n\t\tthis._delete(node);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns an in order iterator over the keys of the tree that lie in the\n\t * interval [left, right[.\n\t * @param {Key} left - The left bound of the interval.\n\t * @param {Key} right - The right bound of the interval.\n\t * @returns {Iterator}\n\t */\n\t*range(left, right) {\n\t\tif (this.root !== null)\n\t\t\tyield* rangetraversal(this.compare, this.root, left, right);\n\t}\n\n\t/**\n\t * Returns an in order iterator over the keys of the tree.\n\t *\n\t * @returns {Iterator}\n\t */\n\t*items() {\n\t\tif (this.root !== null) yield* inordertraversal(this.root);\n\t}\n\n\t/**\n\t * Same as {@link RedBlackTree#items}.\n\t */\n\t[Symbol.iterator]() {\n\t\treturn this.items();\n\t}\n\n\t/**\n\t * Constructs a red-black tree from an input iterable.\n\t *\n\t * @param {Function} compare - The comparison function to use.\n\t * @param {Iterbale} iterable - The input iterable.\n\t * @returns {RedBlackTree}\n\t */\n\tstatic from(compare, iterable) {\n\t\tconst tree = new RedBlackTree(compare);\n\n\t\tfor (const element of iterable) tree.add(element);\n\n\t\treturn tree;\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/adt/RedBlackTree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "RedBlackTree",
    "memberof": "src/adt/RedBlackTree.js",
    "static": true,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/adt/RedBlackTree.js",
    "importStyle": "{RedBlackTree}",
    "description": "A RedBlackTree with key-only nodes.",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 56,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#constructor",
    "access": "public",
    "description": "Constructs a new empty red-black tree.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RedBlackTree}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": "The comparison function for node keys."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RedBlackTree"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "compare",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#compare",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "root",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#root",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "isEmpty",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#isEmpty",
    "access": "public",
    "description": "Tells whether the tree is empty.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true if empty, false otherwise."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if empty, false otherwise."
    },
    "params": []
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "add",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#add",
    "access": "public",
    "description": "Adds a key to the tree.",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key to add."
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "_search",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#_search",
    "access": "private",
    "description": "Search for the input key in the tree.\nReturns the first node whose key equals the input key.\nIf no such node exists, returns <code>null</code>.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The input key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "get",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#get",
    "access": "public",
    "description": "Search for the input key in the tree. Returns the first node key found\nin this way (with {@link RedBlackTree#_search}. If no such key exists\nin the tree, returns <code>null</code>.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Key}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The input key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Key"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "has",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#has",
    "access": "public",
    "description": "Returns <code>true</code> if and only if the tree contains the input\nkey.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The input key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "_delete",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#_delete",
    "access": "private",
    "description": "Deletes the input node from the tree.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The input node to delete."
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "remove",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#remove",
    "access": "public",
    "description": "Search for the first node of the tree whose key equals the input key\n(with {@link RedBlackTree#_search}), then delete that node\n(with {@link RedBlackTree#_delete}). If such a node is found and deleted\nthen return <code>true</code>. Return <code>false</code> otherwise.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} - Whether the key existed in the tree before removal."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The input key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the key existed in the tree before removal."
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "range",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": true,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#range",
    "access": "public",
    "description": "Returns an in order iterator over the keys of the tree that lie in the\ninterval [left, right[.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": "The left bound of the interval."
      },
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": "The right bound of the interval."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "items",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": true,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#items",
    "access": "public",
    "description": "Returns an in order iterator over the keys of the tree.",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree#[Symbol.iterator]",
    "access": "public",
    "description": "Same as {@link RedBlackTree#items}.",
    "lineNumber": 158,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "from",
    "memberof": "src/adt/RedBlackTree.js~RedBlackTree",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/adt/RedBlackTree.js~RedBlackTree.from",
    "access": "public",
    "description": "Constructs a red-black tree from an input iterable.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RedBlackTree}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": "The comparison function to use."
      },
      {
        "nullable": null,
        "types": [
          "Iterbale"
        ],
        "spread": false,
        "optional": false,
        "name": "iterable",
        "description": "The input iterable."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RedBlackTree"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/adt/index.js",
    "content": "export * from './Leaf.js';\nexport * from './Node.js';\nexport * from './RedBlackTree.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/adt/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/color/BLACK.js",
    "content": "/**\n * Constant for black.\n */\nexport const BLACK = 0;\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/color/BLACK.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "BLACK",
    "memberof": "src/color/BLACK.js",
    "static": true,
    "longname": "src/color/BLACK.js~BLACK",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/color/BLACK.js",
    "importStyle": "{BLACK}",
    "description": "Constant for black.",
    "lineNumber": 4,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/color/RED.js",
    "content": "/**\n * Constant for red.\n */\nexport const RED = 1;\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/color/RED.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "RED",
    "memberof": "src/color/RED.js",
    "static": true,
    "longname": "src/color/RED.js~RED",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/color/RED.js",
    "importStyle": "{RED}",
    "description": "Constant for red.",
    "lineNumber": 4,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/color/index.js",
    "content": "export * from './BLACK.js';\nexport * from './RED.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/color/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/debug/debug.js",
    "content": "import {BLACK} from '../color/BLACK.js';\n\n/**\n * Builds a debug function from color handlers.\n *\n * @param {Object} colors The colors to use.\n * @returns {Function} The debug function.\n */\nexport const _debug = ({red, black}) => {\n\t/**\n\t * Recursively constructs a prettyprint string for the red-black tree rooted at\n\t * <code>root</code>.\n\t *\n\t * @param {Node} root - The root of the tree.\n\t * @returns {string}\n\t */\n\tconst debug = (root) => {\n\t\tif (root.isLeaf()) return black('L');\n\n\t\tconst repr = root._color === BLACK ? black(root.key) : red(root.key);\n\n\t\treturn `(${debug(root.left)}, ${repr}, ${debug(root.right)})`;\n\t};\n\n\treturn debug;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/debug/debug.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "_debug",
    "memberof": "src/debug/debug.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/debug/debug.js~_debug",
    "access": "private",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/debug/debug.js",
    "importStyle": "{_debug}",
    "description": "Builds a debug function from color handlers.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} The debug function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "colors",
        "description": "The colors to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "The debug function."
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/debug/index.js",
    "content": "export * from './debug.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/debug/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/deletion/delete_case1.js",
    "content": "import {delete_case2} from './delete_case2.js';\n\n/**\n * Preconditions:\n *   - n is black\n *   - all root-leaf paths going through n have a black height of b - 1\n *   - all other root-leaf paths have a black height of b\n *\n * @param {Node} n - The input node.\n */\nexport const delete_case1 = (n) => {\n\t// If n is the root, there is nothing to do: all paths go through n, and n\n\t// is black.\n\tif (n.parent !== null) delete_case2(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_case1.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "delete_case1",
    "memberof": "src/deletion/delete_case1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_case1.js~delete_case1",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_case1.js",
    "importStyle": "{delete_case1}",
    "description": "Preconditions:\n  - n is black\n  - all root-leaf paths going through n have a black height of b - 1\n  - all other root-leaf paths have a black height of b",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/deletion/delete_case2.js",
    "content": "import {BLACK, RED} from '../color/index.js';\nimport {rotate_left, rotate_right} from '../rotate/index.js';\nimport {sibling} from '../family/sibling.js';\n\nimport {delete_case3} from './delete_case3.js';\nimport {delete_case4} from './delete_case4.js';\n\n/**\n * Preconditions:\n *   - n is black\n *   - all root-leaf paths going through n have a black height of b - 1\n *   - all other root-leaf paths have a black height of b\n *   - n is not the root\n *\n * @param {Node} n - The input node.\n */\nexport const delete_case2 = (n) => {\n\tconst s = sibling(n);\n\n\t/**\n\t * If n's sibling is red, prepare for and go to case 4.\n\t *\n\t *           B                       B\n\t *         /   \\                  /     \\\n\t *      >B       R               R       B\n\t *      / \\     / \\     -->    /   \\    / \\\n\t *     -   -  B     B        >B     B  =   =\n\t *           / \\   / \\       / \\   / \\\n\t *          =   = =   =     -   - =   =\n\t */\n\tif (s._color === RED) {\n\t\tn.parent._color = RED;\n\t\ts._color = BLACK;\n\t\tif (n === n.parent.left) rotate_left(n.parent);\n\t\telse rotate_right(n.parent);\n\t\tdelete_case4(n);\n\t}\n\n\t// Otherwise, go to case 3.\n\telse delete_case3(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_case2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "delete_case2",
    "memberof": "src/deletion/delete_case2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_case2.js~delete_case2",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_case2.js",
    "importStyle": "{delete_case2}",
    "description": "Preconditions:\n  - n is black\n  - all root-leaf paths going through n have a black height of b - 1\n  - all other root-leaf paths have a black height of b\n  - n is not the root",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/deletion/delete_case3.js",
    "content": "import {BLACK, RED} from '../color/index.js';\nimport {sibling} from '../family/sibling.js';\n\nimport {delete_case1} from './delete_case1.js';\nimport {delete_case4} from './delete_case4.js';\n\n/**\n * Preconditions:\n *   - n is black\n *   - all root-leaf paths going through n have a black height of b - 1\n *   - all other root-leaf paths have a black height of b\n *   - n is not the root\n *   - n's sibling is black\n *\n * @param {Node} n - The input node.\n */\nexport const delete_case3 = (n) => {\n\tconst s = sibling(n);\n\n\t/**\n\t * If n's parent is black and n's sibling's children are black, then\n\t * repaint n's sibling red. Now all root-leaft paths going through n's\n\t * parent have a black height of b - 1. We recurse thus on n's parent.\n\t *\n\t *           B                      >B\n\t *         /   \\                  /     \\\n\t *      >B       B               B       R\n\t *      / \\     / \\     -->    /   \\    / \\\n\t *     -   -  B     B         -     - B     B\n\t *           / \\   / \\               / \\   / \\\n\t *          -   - -   -             -   - -   -\n\t */\n\tif (\n\t\tn.parent._color === BLACK &&\n\t\ts.left._color === BLACK &&\n\t\ts.right._color === BLACK\n\t) {\n\t\ts._color = RED;\n\t\tdelete_case1(n.parent);\n\t}\n\n\t// Otherwise, go to case 4.\n\telse delete_case4(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_case3.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "delete_case3",
    "memberof": "src/deletion/delete_case3.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_case3.js~delete_case3",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_case3.js",
    "importStyle": "{delete_case3}",
    "description": "Preconditions:\n  - n is black\n  - all root-leaf paths going through n have a black height of b - 1\n  - all other root-leaf paths have a black height of b\n  - n is not the root\n  - n's sibling is black",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/deletion/delete_case4.js",
    "content": "import {BLACK, RED} from '../color/index.js';\nimport {sibling} from '../family/sibling.js';\n\nimport {delete_case5} from './delete_case5.js';\n\n/**\n * Preconditions:\n *   - n is black\n *   - all root-leaf paths going through n have a black height of b - 1\n *   - all other root-leaf paths have a black height of b\n *   - n is not the root\n *   - n's sibling is black\n *   - n's parent and n's sibling's children cannot all be black\n *\n * @param {Node} n - The input node.\n */\nexport const delete_case4 = (n) => {\n\tconst s = sibling(n);\n\n\t/**\n\t * If n's parent is red and n's sibling's children are black, then swap n's\n\t * parent and n's sibling color. All root-leaf paths going through n have\n\t * now a black height of b. All other root-leaf paths have their black\n\t * height unchanged. Red-black properties are respected. We are done.\n\t *\n\t *           R                       B\n\t *         /   \\                  /     \\\n\t *      >B       B              >B        R\n\t *      / \\     / \\     -->     / \\      / \\\n\t *     -   -  B     B          -   -   B     B\n\t *           / \\   / \\                / \\   / \\\n\t *          -   - -   -              -   - -   -\n\t */\n\tif (\n\t\t// The parent color test is always true when coming from case 2\n\t\tn.parent._color === RED &&\n\t\ts.left._color === BLACK &&\n\t\ts.right._color === BLACK\n\t) {\n\t\ts._color = RED;\n\t\tn.parent._color = BLACK;\n\t}\n\n\t// Otherwise, go to case 5.\n\telse delete_case5(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_case4.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "delete_case4",
    "memberof": "src/deletion/delete_case4.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_case4.js~delete_case4",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_case4.js",
    "importStyle": "{delete_case4}",
    "description": "Preconditions:\n  - n is black\n  - all root-leaf paths going through n have a black height of b - 1\n  - all other root-leaf paths have a black height of b\n  - n is not the root\n  - n's sibling is black\n  - n's parent and n's sibling's children cannot all be black",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/deletion/delete_case5.js",
    "content": "import {BLACK, RED} from '../color/index.js';\nimport {rotate_left, rotate_right} from '../rotate/index.js';\nimport {sibling} from '../family/sibling.js';\n\nimport {delete_case6} from './delete_case6.js';\n\n/**\n * Preconditions:\n *   - n is black\n *   - all root-leaf paths going through n have a black height of b - 1\n *   - all other root-leaf paths have a black height of b\n *   - n is not the root\n *   - n's sibling is black\n *   - at least one of n's sibling's children is red\n *\n * @param {Node} n - The input node.\n */\nexport const delete_case5 = (n) => {\n\tconst s = sibling(n);\n\n\t// The following statements just force the red n's sibling child to be on\n\t// the left of the left of the parent, or right of the right, so case 6\n\t// will rotate correctly.\n\n\t/**\n\t *           ?                       ?\n\t *         /   \\                  /     \\\n\t *      >B       B              >B        B\n\t *      / \\     / \\     -->     / \\      / \\\n\t *     -   -  R     B          -   -   =     R\n\t *           / \\   / \\                      / \\\n\t *          =   = -   -                    =   B\n\t *                                            / \\\n\t *                                           -   -\n\t */\n\tif (n === n.parent.left && s.right._color === BLACK) {\n\t\ts._color = RED;\n\t\ts.left._color = BLACK;\n\t\trotate_right(s);\n\t} else if (n === n.parent.right && s.left._color === BLACK) {\n\t\t/**\n\t\t *           ?                       ?\n\t\t *         /   \\                  /     \\\n\t\t *       B      >B               B       >B\n\t\t *      / \\     / \\     -->     / \\      / \\\n\t\t *    B     R  -   -          R     =   -   -\n\t\t *   / \\   / \\               / \\\n\t\t *  -   - =   =             B   =\n\t\t *                         / \\\n\t\t *                        -   -\n\t\t */\n\t\ts._color = RED;\n\t\ts.right._color = BLACK;\n\t\trotate_left(s);\n\t}\n\n\tdelete_case6(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_case5.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "delete_case5",
    "memberof": "src/deletion/delete_case5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_case5.js~delete_case5",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_case5.js",
    "importStyle": "{delete_case5}",
    "description": "Preconditions:\n  - n is black\n  - all root-leaf paths going through n have a black height of b - 1\n  - all other root-leaf paths have a black height of b\n  - n is not the root\n  - n's sibling is black\n  - at least one of n's sibling's children is red",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/deletion/delete_case6.js",
    "content": "import {BLACK} from '../color/BLACK.js';\nimport {rotate_left, rotate_right} from '../rotate/index.js';\nimport {sibling} from '../family/sibling.js';\n\n/**\n * Preconditions:\n *   - n is black\n *   - all root-leaf paths going through n have a black height of b - 1\n *   - all other root-leaf paths have a black height of b\n *   - n is not the root\n *   - n's sibling is black\n *   - if n is a left child, the right child of n's sibling is red\n *   - if n is a right child, the left child of n's sibling is red\n *\n * @param {Node} n - The input node.\n */\nexport const delete_case6 = (n) => {\n\tconst s = sibling(n);\n\n\t/**\n\t * Increment the black height of all root-leaf paths going through n by\n\t * rotating at n's parent. This decrements the black height of all\n\t * root-leaft paths going through n's sibling's right child.\n\t * We can repaint n's sibling's right child in black to fix this.\n\t * We are done.\n\t *\n\t *           ?                          ?\n\t *        /     \\                     /   \\\n\t *      >B        B                 B       B\n\t *      / \\      / \\               / \\     / \\\n\t *     -   -   =     R     -->   >B   =   =   B\n\t *                  / \\          / \\         / \\\n\t *                 =   B        -   -       -   -\n\t *                    / \\\n\t *                   -   -\n\t */\n\n\ts._color = n.parent._color;\n\tn.parent._color = BLACK;\n\n\tif (n === n.parent.left) {\n\t\ts.right._color = BLACK;\n\t\trotate_left(n.parent);\n\t}\n\n\t// Symmetric case\n\telse {\n\t\ts.left._color = BLACK;\n\t\trotate_right(n.parent);\n\t}\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_case6.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "delete_case6",
    "memberof": "src/deletion/delete_case6.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_case6.js~delete_case6",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_case6.js",
    "importStyle": "{delete_case6}",
    "description": "Preconditions:\n  - n is black\n  - all root-leaf paths going through n have a black height of b - 1\n  - all other root-leaf paths have a black height of b\n  - n is not the root\n  - n's sibling is black\n  - if n is a left child, the right child of n's sibling is red\n  - if n is a right child, the left child of n's sibling is red",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/deletion/delete_one_child.js",
    "content": "import {BLACK, RED} from '../color/index.js';\n\nimport {replace_node} from './replace_node.js';\nimport {delete_case1} from './delete_case1.js';\n\n/**\n * Delete a node <code>n</code> that has at most a single non-leaf child.\n *\n * Precondition:\n *   - n has at most one non-leaf child.\n *   - if n has a non-leaf child, then it is its left child.\n *\n * @param {Node} n - The node to delete.\n */\nexport const delete_one_child = (n) => {\n\t// Precondition: n has at most one non-leaf child.\n\t// assert( n.right.isLeaf() || n.left.isLeaf());\n\n\t// const child = n.right.isLeaf() ? n.left : n.right;\n\t// n.right is always a LEAF because either n is a subtree predecessor or it\n\t// is the only child of its parent by the red-black tree properties\n\tconst child = n.left;\n\n\t// Replace n with its left child\n\treplace_node(n, child);\n\n\t// If n is black, deleting it reduces the black-height of every path going\n\t// through it by 1.\n\tif (n._color === BLACK) {\n\t\t// We can easily fix this when its left child is an\n\t\t// internal red node: change the color of the left child to black and\n\t\t// replace n with it.\n\t\tif (child._color === RED) child._color = BLACK;\n\t\t// Otherwise, there are more things to fix.\n\t\telse delete_case1(child);\n\t}\n\n\t// Else {\n\t//    If n is red then its child can only be black. Replacing n with its\n\t//    child suffices.\n\t// }\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/delete_one_child.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "delete_one_child",
    "memberof": "src/deletion/delete_one_child.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/delete_one_child.js~delete_one_child",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/delete_one_child.js",
    "importStyle": "{delete_one_child}",
    "description": "Delete a node <code>n</code> that has at most a single non-leaf child.\n\nPrecondition:\n  - n has at most one non-leaf child.\n  - if n has a non-leaf child, then it is its left child.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The node to delete."
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "src/deletion/index.js",
    "content": "export * from './delete_case1.js';\nexport * from './delete_case2.js';\nexport * from './delete_case3.js';\nexport * from './delete_case4.js';\nexport * from './delete_case5.js';\nexport * from './delete_case6.js';\nexport * from './delete_one_child.js';\nexport * from './replace_node.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/deletion/replace_node.js",
    "content": "/**\n * Replaces node <code>A</code> by node <code>B</code>.\n *\n * @param {Node} A - The node to replace.\n * @param {Node} B - The replacement node.\n */\nexport const replace_node = (A, B) => {\n\t// Assert( A.parent !== null ) ;\n\t// we never apply delete_one_child on the root so we are safe\n\n\tif (A === A.parent.left) A.parent.left = B;\n\telse A.parent.right = B;\n\n\tB.parent = A.parent;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/deletion/replace_node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "replace_node",
    "memberof": "src/deletion/replace_node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/deletion/replace_node.js~replace_node",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/deletion/replace_node.js",
    "importStyle": "{replace_node}",
    "description": "Replaces node <code>A</code> by node <code>B</code>.",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "A",
        "description": "The node to replace."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": "The replacement node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/family/grandparent.js",
    "content": "/**\n * Computes the grandparent (parent of parent) of the input node.\n *\n * @param {Node} node - The input node.\n * @returns {Node}\n */\nexport const grandparent = (node) => {\n\t// Assert((node !== null) && (node.parent !== null));\n\t// We only call this function when node HAS a grandparent\n\treturn node.parent.parent;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/family/grandparent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "grandparent",
    "memberof": "src/family/grandparent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/family/grandparent.js~grandparent",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/family/grandparent.js",
    "importStyle": "{grandparent}",
    "description": "Computes the grandparent (parent of parent) of the input node.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The input node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/family/index.js",
    "content": "export * from './grandparent.js';\nexport * from './predecessor.js';\nexport * from './sibling.js';\nexport * from './uncle.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/family/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/family/predecessor.js",
    "content": "/**\n * Computes the predecessor of the input node, in the subtree rooted at the\n * input node, when this predecessor is guaranteed to exist.\n *\n * @param {Node} node - The input node.\n * @returns {Node}\n */\nexport const predecessor = (node) => {\n\t// Assert( !node.left.isLeaf() ) ;\n\tlet pred = node.left;\n\n\twhile (!pred.right.isLeaf()) pred = pred.right;\n\n\treturn pred;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/family/predecessor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "predecessor",
    "memberof": "src/family/predecessor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/family/predecessor.js~predecessor",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/family/predecessor.js",
    "importStyle": "{predecessor}",
    "description": "Computes the predecessor of the input node, in the subtree rooted at the\ninput node, when this predecessor is guaranteed to exist.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The input node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/family/sibling.js",
    "content": "/**\n * Computes the sibling of the input node.\n *\n * @param {Node} node - The input node.\n * @returns {Node}\n */\nexport const sibling = (node) => {\n\t// Assert((node !== null) && (node.parent !== null));\n\t// We only use this function when node HAS a sibling so this case can never\n\t// happen.\n\n\treturn node === node.parent.left ? node.parent.right : node.parent.left;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/family/sibling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "sibling",
    "memberof": "src/family/sibling.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/family/sibling.js~sibling",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/family/sibling.js",
    "importStyle": "{sibling}",
    "description": "Computes the sibling of the input node.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The input node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/family/uncle.js",
    "content": "import {grandparent} from './grandparent.js';\n\n/**\n * Computes the uncle of the input node when the grandparent is guaranteed to\n * exist.\n *\n * @param {Node} node - The input node.\n * @returns {Node}\n */\nexport const uncle = (node) => {\n\tconst g = grandparent(node);\n\t// Assert( g !== null ) ;\n\t// this can never happen\n\tif (node.parent === g.left) return g.right.isLeaf() ? null : g.right;\n\treturn g.left.isLeaf() ? null : g.left;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/family/uncle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "uncle",
    "memberof": "src/family/uncle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/family/uncle.js~uncle",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/family/uncle.js",
    "importStyle": "{uncle}",
    "description": "Computes the uncle of the input node when the grandparent is guaranteed to\nexist.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The input node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/index.js",
    "content": "export * from './adt/index.js';\nexport * from './color/index.js';\nexport * from './debug/index.js';\nexport * from './deletion/index.js';\nexport * from './family/index.js';\nexport * from './insertion/index.js';\nexport * from './rotate/index.js';\nexport * from './search/index.js';\nexport * from './traversal/index.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/insertion/index.js",
    "content": "export * from './insert.js';\nexport * from './insert_case1.js';\nexport * from './insert_case2.js';\nexport * from './insert_case3.js';\nexport * from './insert_case4.js';\nexport * from './insert_case5.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/insertion/insert.js",
    "content": "/**\n * Walks the tree rooted at <code>A</code> down the only path that satisfies\n * the following property: if at a node <code>C</code> we make a left (resp.\n * right), then <code>B < C</code> (resp. <code>B >= C</code>). Once we hit the\n * end of the path, we can add node <code>B</code> at this position. By the\n * property of the path, the tree rooted at <code>A</code> is still a binary\n * search tree.\n * For our red-black tree, all that is left to do is fix the red-black tree\n * properties in case they have been violated by this insertion. This is fixed\n * by {@link insert_case1}.\n *\n * @param compare - The comparison function to use.\n * @param {Node} A - The root of the tree.\n * @param {Node} B - The node to insert.\n * @returns {Node} B - The node that has been inserted.\n */\nexport const insert = (compare, A, B) => {\n\twhile (true) {\n\t\tif (compare(B.key, A.key) < 0) {\n\t\t\tconst node = A.left;\n\n\t\t\tif (node.isLeaf()) {\n\t\t\t\tA.left = B;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tA = node;\n\t\t} else {\n\t\t\tconst node = A.right;\n\n\t\t\tif (node.isLeaf()) {\n\t\t\t\tA.right = B;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tA = node;\n\t\t}\n\t}\n\n\tB.parent = A;\n\n\treturn B;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/insert.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "insert",
    "memberof": "src/insertion/insert.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/insertion/insert.js~insert",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/insertion/insert.js",
    "importStyle": "{insert}",
    "description": "Walks the tree rooted at <code>A</code> down the only path that satisfies\nthe following property: if at a node <code>C</code> we make a left (resp.\nright), then <code>B < C</code> (resp. <code>B >= C</code>). Once we hit the\nend of the path, we can add node <code>B</code> at this position. By the\nproperty of the path, the tree rooted at <code>A</code> is still a binary\nsearch tree.\nFor our red-black tree, all that is left to do is fix the red-black tree\nproperties in case they have been violated by this insertion. This is fixed\nby {@link insert_case1}.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node} B - The node that has been inserted."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": "The comparison function to use."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "A",
        "description": "The root of the tree."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": "The node to insert."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": "B - The node that has been inserted."
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/insertion/insert_case1.js",
    "content": "import {BLACK} from '../color/BLACK.js';\nimport {insert_case2} from './insert_case2.js';\n\n/**\n * Preconditions:\n *   - n is red.\n *\n * @param {Node} n - The input node.\n */\nexport const insert_case1 = (n) => {\n\t/**\n\t * If n is the root of the tree, paint it black and we are done.\n\t *\n\t *      >R\n\t *      / \\\n\t *     -   -\n\t */\n\tif (n.parent === null) n._color = BLACK;\n\telse insert_case2(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/insert_case1.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "insert_case1",
    "memberof": "src/insertion/insert_case1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/insertion/insert_case1.js~insert_case1",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/insertion/insert_case1.js",
    "importStyle": "{insert_case1}",
    "description": "Preconditions:\n  - n is red.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/insertion/insert_case2.js",
    "content": "import {BLACK} from '../color/BLACK.js';\nimport {insert_case3} from './insert_case3.js';\n\n/**\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *\n * @param {Node} n - The input node.\n */\nexport const insert_case2 = (n) => {\n\t/**\n\t * If the parent of n is black then we have nothing to do.\n\t *\n\t *         B\n\t *        / \\\n\t *      >R   -\n\t *      / \\\n\t *     -   -\n\t */\n\tif (n.parent._color === BLACK) return;\n\n\tinsert_case3(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/insert_case2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "insert_case2",
    "memberof": "src/insertion/insert_case2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/insertion/insert_case2.js~insert_case2",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/insertion/insert_case2.js",
    "importStyle": "{insert_case2}",
    "description": "Preconditions:\n  - n is red.\n  - n is not the root of the tree.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/insertion/insert_case3.js",
    "content": "import {BLACK, RED} from '../color/index.js';\nimport {uncle, grandparent} from '../family/index.js';\nimport {insert_case1} from './insert_case1.js';\nimport {insert_case4} from './insert_case4.js';\n\n/**\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *\n * @param {Node} n - The input node.\n */\nexport const insert_case3 = (n) => {\n\tconst u = uncle(n);\n\n\t/**\n\t * If n has a non-leaf uncle and this uncle is red then we simply\n\t * repaint the parent and the uncle of n in black, the grandparent of\n\t * n in red, then call insert_case1 on n's grandparent.\n\t *\n\t *             B                    >R\n\t *           /   \\                 /   \\\n\t *         R       R             B       B\n\t *        / \\     / \\   -->     / \\     / \\\n\t *      >R   -   -   -         R   -   -   -\n\t *      / \\                   / \\\n\t *     -   -                 -   -\n\t */\n\n\tif (u !== null && u._color === RED) {\n\t\tn.parent._color = BLACK;\n\t\tu._color = BLACK;\n\t\tconst g = grandparent(n);\n\t\tg._color = RED;\n\t\tinsert_case1(g);\n\t} else insert_case4(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/insert_case3.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "insert_case3",
    "memberof": "src/insertion/insert_case3.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/insertion/insert_case3.js~insert_case3",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/insertion/insert_case3.js",
    "importStyle": "{insert_case3}",
    "description": "Preconditions:\n  - n is red.\n  - n is not the root of the tree.\n  - n's parent is red.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/insertion/insert_case4.js",
    "content": "import {rotate_left, rotate_right} from '../rotate/index.js';\nimport {grandparent} from '../family/grandparent.js';\nimport {insert_case5} from './insert_case5.js';\n\n/**\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *   - n's uncle is black.\n *\n * Here we fix the input subtree to pass the preconditions of {@link insert_case5}.\n *\n * @param {Node} n - The input node.\n */\nexport const insert_case4 = (n) => {\n\tconst g = grandparent(n);\n\n\t/**\n\t * If the path from g to n makes a left-right, change it to a left-left\n\t * with {@link rotate_left}. Then call {@link insert_case5} on the old\n\t * parent of n.\n\t *\n\t *             B                     B\n\t *           /   \\                 /   \\\n\t *         R       B             R       B\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       =  >R   -   -        >R   =   -   -\n\t *          / \\               / \\\n\t *         =   =             =   =\n\t */\n\n\tif (n === n.parent.right && n.parent === g.left) {\n\t\trotate_left(n.parent);\n\n\t\t/**\n\t\t * Rotate_left can be the below because of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.left, *saved_left_n=n.left;\n\t\t * g.left=n;\n\t\t * n.left=saved_p;\n\t\t * saved_p.right=saved_left_n;\n\t\t *\n\t\t * and modify the parent's nodes properly\n\t\t */\n\n\t\t// n = n.left; /!\\ need to fix rotate, so that we can safely reference a node\n\t} else if (n === n.parent.left && n.parent === g.right) {\n\t\t/**\n\t\t * If the path from g to n makes a right-left, change it to a right-right\n\t\t * with {@link rotate_right}. Then call {@link insert_case5} on the old\n\t\t * parent of n.\n\t\t *\n\t\t *             B                     B\n\t\t *           /   \\                 /   \\\n\t\t *         B       R             B       R\n\t\t *        / \\     / \\   -->     / \\     / \\\n\t\t *       -   -  >R   =         -   -   =  >R\n\t\t *              / \\                       / \\\n\t\t *             =   =                     =   =\n\t\t */\n\t\trotate_right(n.parent);\n\n\t\t/**\n\t\t * Rotate_right can be the below to take advantage of already having *g =  grandparent(n)\n\t\t *\n\t\t * saved_p=g.right, *saved_right_n=n.right;\n\t\t * g.right=n;\n\t\t * n.right=saved_p;\n\t\t * saved_p.left=saved_right_n;\n\t\t *\n\t\t */\n\n\t\t// n = n.right ;\n\t}\n\n\tinsert_case5(n);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/insert_case4.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "insert_case4",
    "memberof": "src/insertion/insert_case4.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/insertion/insert_case4.js~insert_case4",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/insertion/insert_case4.js",
    "importStyle": "{insert_case4}",
    "description": "Preconditions:\n  - n is red.\n  - n is not the root of the tree.\n  - n's parent is red.\n  - n's uncle is black.\n\nHere we fix the input subtree to pass the preconditions of {@link insert_case5}.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/insertion/insert_case5.js",
    "content": "import {BLACK, RED} from '../color/index.js';\nimport {rotate_left, rotate_right} from '../rotate/index.js';\nimport {grandparent} from '../family/grandparent.js';\n\n/**\n * Preconditions:\n *   - n is red.\n *   - n is not the root of the tree.\n *   - n's parent is red.\n *   - n's uncle is black.\n *   - the path from n to its grandparent makes a left-left or right-right.\n *\n * @param {Node} n - The input node.\n */\nexport const insert_case5 = (n) => {\n\tconst g = grandparent(n);\n\n\t// Repaint n's parent black, n's grandparent red\n\tn.parent._color = BLACK;\n\tg._color = RED;\n\n\t/**\n\t * If the path from g to n makes a left-left, {@link rotate_right} at g.\n\t * We are done.\n\t *\n\t *             R                     B\n\t *           /   \\                 /   \\\n\t *         B       B            >R       R\n\t *        / \\     / \\   -->     / \\     / \\\n\t *      >R   =   -   -         =   =   =   B\n\t *      / \\                               / \\\n\t *     =   =                             -   -\n\t */\n\tif (n === n.parent.left) rotate_right(g);\n\t/**\n\t * If the path from g to n makes a right-right, {@link rotate_left} at g.\n\t * We are done.\n\t *\n\t *             R                     B\n\t *           /   \\                 /   \\\n\t *         B       B             R      >R\n\t *        / \\     / \\   -->     / \\     / \\\n\t *       -   -   =  >R         B   =   =   =\n\t *                  / \\       / \\\n\t *                 =   =     -   -\n\t */ else rotate_left(g);\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/insertion/insert_case5.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "insert_case5",
    "memberof": "src/insertion/insert_case5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/insertion/insert_case5.js~insert_case5",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/insertion/insert_case5.js",
    "importStyle": "{insert_case5}",
    "description": "Preconditions:\n  - n is red.\n  - n is not the root of the tree.\n  - n's parent is red.\n  - n's uncle is black.\n  - the path from n to its grandparent makes a left-left or right-right.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The input node."
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/rotate/index.js",
    "content": "export * from './rotate_left.js';\nexport * from './rotate_right.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/rotate/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/rotate/rotate_left.js",
    "content": "/**\n * Rotate tree left. (see https://en.wikipedia.org/wiki/Tree_rotation)\n * /!\\ This swaps the references to A and B.\n *\n *         A                B\n *        / \\              / \\\n *       a   B     ->     A   c\n *          / \\          / \\\n *         b   c        a   b\n *\n *\n * @param {Node} A - The root of the tree.\n *\n */\n\nexport const rotate_left = (A) => {\n\tconst B = A.right;\n\tconst a = A.left;\n\tconst b = B.left;\n\tconst c = B.right;\n\n\t[A.key, B.key] = [B.key, A.key];\n\t[A._color, B._color] = [B._color, A._color];\n\n\tA.left = B;\n\tA.right = c;\n\n\tB.left = a;\n\tB.right = b;\n\n\ta.parent = B;\n\tb.parent = B;\n\tc.parent = A;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/rotate/rotate_left.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "rotate_left",
    "memberof": "src/rotate/rotate_left.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/rotate/rotate_left.js~rotate_left",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/rotate/rotate_left.js",
    "importStyle": "{rotate_left}",
    "description": "Rotate tree left. (see https://en.wikipedia.org/wiki/Tree_rotation)\n/!\\ This swaps the references to A and B.\n\n        A                B\n       / \\              / \\\n      a   B     ->     A   c\n         / \\          / \\\n        b   c        a   b",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "A",
        "description": "The root of the tree."
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/rotate/rotate_right.js",
    "content": "/**\n * Rotate tree right. (see https://en.wikipedia.org/wiki/Tree_rotation)\n * /!\\ This swaps the references to A and B.\n *\n *         B                A\n *        / \\              / \\\n *       A   c     ->     a   B\n *      / \\                  / \\\n *     a   b                b   c\n *\n *\n * @param {Node} B - The root of the tree.\n *\n */\n\nexport const rotate_right = (B) => {\n\tconst A = B.left;\n\tconst a = A.left;\n\tconst b = A.right;\n\tconst c = B.right;\n\n\t[A.key, B.key] = [B.key, A.key];\n\t[A._color, B._color] = [B._color, A._color];\n\n\tB.left = a;\n\tB.right = A;\n\n\tA.left = b;\n\tA.right = c;\n\n\ta.parent = B;\n\tb.parent = A;\n\tc.parent = A;\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/rotate/rotate_right.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "rotate_right",
    "memberof": "src/rotate/rotate_right.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/rotate/rotate_right.js~rotate_right",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/rotate/rotate_right.js",
    "importStyle": "{rotate_right}",
    "description": "Rotate tree right. (see https://en.wikipedia.org/wiki/Tree_rotation)\n/!\\ This swaps the references to A and B.\n\n        B                A\n       / \\              / \\\n      A   c     ->     a   B\n     / \\                  / \\\n    a   b                b   c",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": "The root of the tree."
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/search/index.js",
    "content": "export * from './search.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/search/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "src/search/search.js",
    "content": "/**\n * Search for the first node whose key equals <code>key</code>.\n *\n * @param {Function} compare - The comparison function.\n * @param {Node} root - The root of the tree to scan.\n * @param {Key} key - The key to search for.\n * @returns {Node}\n */\nexport const search = (compare, root, key) => {\n\twhile (true) {\n\t\tconst d = compare(key, root.key);\n\n\t\tif (d === 0) {\n\t\t\treturn root;\n\t\t}\n\n\t\troot = d < 0 ? root.left : root.right;\n\n\t\tif (root.isLeaf()) {\n\t\t\treturn null;\n\t\t}\n\t}\n};\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/search/search.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "search",
    "memberof": "src/search/search.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/search/search.js~search",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/search/search.js",
    "importStyle": "{search}",
    "description": "Search for the first node whose key equals <code>key</code>.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": "The comparison function."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "The root of the tree to scan."
      },
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key to search for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 129,
    "kind": "file",
    "name": "src/traversal/index.js",
    "content": "export * from './inordertraversal.js';\nexport * from './rangetraversal.js';\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/traversal/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/traversal/inordertraversal.js",
    "content": "/**\n * Traverses the tree rooted at <code>node</code> in order.\n *\n * @param {Node} node - The root of the tree.\n * @returns {Iterator}\n */\nexport function* inordertraversal(node) {\n\tif (!node.left.isLeaf()) {\n\t\t// Yield the nodes on the left recursively. Those nodes are all smaller\n\t\t// than (or equal to) the current node by the binary search tree\n\t\t// properties.\n\t\tyield* inordertraversal(node.left);\n\t}\n\n\t// Yield the current node.\n\tyield node.key;\n\n\tif (!node.right.isLeaf()) {\n\t\t// Yield the nodes on the right recursively. Those nodes are all larger\n\t\t// than (or equal to) the current node by the binary search tree\n\t\t// properties.\n\t\tyield* inordertraversal(node.right);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/traversal/inordertraversal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "inordertraversal",
    "memberof": "src/traversal/inordertraversal.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/traversal/inordertraversal.js~inordertraversal",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/traversal/inordertraversal.js",
    "importStyle": "{inordertraversal}",
    "description": "Traverses the tree rooted at <code>node</code> in order.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The root of the tree."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/traversal/rangetraversal.js",
    "content": "/**\n * Yields all the keys in the tree rooted at <code>root</code> that lie in the\n * interval <code>[left, right[</code>, in order.\n *\n * @param {Function} compare - The comparison function.\n * @param {Node} root - The root of the tree.\n * @param {Key} left - The lower bound of the interval.\n * @param {Key} right - The upper bound of the interval.\n * @returns {Iterator}\n */\nexport function* rangetraversal(compare, root, left, right) {\n\tif (compare(root.key, left) < 0) {\n\t\t// If the root lies to the left of the interval, we can discard the\n\t\t// entire left subtree.\n\t\tif (!root.right.isLeaf())\n\t\t\tyield* rangetraversal(compare, root.right, left, right);\n\t} else if (compare(root.key, right) >= 0) {\n\t\t// If the root lies to the right of the interval, we can discard the\n\t\t// entire right subtree.\n\t\tif (!root.left.isLeaf())\n\t\t\tyield* rangetraversal(compare, root.left, left, right);\n\t} else {\n\t\t// Otherwise just recurse on both subtrees and yield the root in\n\t\t// between.\n\t\tif (!root.left.isLeaf())\n\t\t\tyield* rangetraversal(compare, root.left, left, right);\n\t\tyield root.key;\n\t\tif (!root.right.isLeaf())\n\t\t\tyield* rangetraversal(compare, root.right, left, right);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/src/traversal/rangetraversal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "rangetraversal",
    "memberof": "src/traversal/rangetraversal.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/traversal/rangetraversal.js~rangetraversal",
    "access": "public",
    "export": true,
    "importPath": "@aureooms/js-red-black-tree/src/traversal/rangetraversal.js",
    "importStyle": "{rangetraversal}",
    "description": "Yields all the keys in the tree rooted at <code>root</code> that lie in the\ninterval <code>[left, right[</code>, in order.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Iterator}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "compare",
        "description": "The comparison function."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": "The root of the tree."
      },
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": "The lower bound of the interval."
      },
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": "The upper bound of the interval."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": ":christmas_tree: [@aureooms/js-red-black-tree](https://aureooms.github.io/js-red-black-tree)\n==\n\n<img src=\"https://cdn.rawgit.com/aureooms/js-red-black-tree/main/media/sketch.svg\" width=\"864\">\n\n```js\nlet tree = RedBlackTree.from( increasing , range( 100000 ) ) ;\n```\n\nRed-black tree library for JavaScript.\nSee [documentation](https://aureooms.github.io/js-red-black-tree/index.html).\nParent is [@aureooms/js-bst](https://github.com/aureooms/js-bst).\n\n[![License](https://img.shields.io/github/license/aureooms/js-red-black-tree.svg)](https://raw.githubusercontent.com/aureooms/js-red-black-tree/main/LICENSE)\n[![Version](https://img.shields.io/npm/v/@aureooms/js-red-black-tree.svg)](https://www.npmjs.org/package/@aureooms/js-red-black-tree)\n[![Tests](https://img.shields.io/github/workflow/status/aureooms/js-red-black-tree/ci:test?event=push&label=tests)](https://github.com/aureooms/js-red-black-tree/actions/workflows/ci:test.yml?query=branch:main)\n[![Dependencies](https://img.shields.io/david/aureooms/js-red-black-tree.svg)](https://david-dm.org/aureooms/js-red-black-tree)\n[![Dev dependencies](https://img.shields.io/david/dev/aureooms/js-red-black-tree.svg)](https://david-dm.org/aureooms/js-red-black-tree?type=dev)\n[![GitHub issues](https://img.shields.io/github/issues/aureooms/js-red-black-tree.svg)](https://github.com/aureooms/js-red-black-tree/issues)\n[![Downloads](https://img.shields.io/npm/dm/@aureooms/js-red-black-tree.svg)](https://www.npmjs.org/package/@aureooms/js-red-black-tree)\n\n[![Code issues](https://img.shields.io/codeclimate/issues/aureooms/js-red-black-tree.svg)](https://codeclimate.com/github/aureooms/js-red-black-tree/issues)\n[![Code maintainability](https://img.shields.io/codeclimate/maintainability/aureooms/js-red-black-tree.svg)](https://codeclimate.com/github/aureooms/js-red-black-tree/trends/churn)\n[![Code coverage (cov)](https://img.shields.io/codecov/c/gh/aureooms/js-red-black-tree/main.svg)](https://codecov.io/gh/aureooms/js-red-black-tree)\n[![Code technical debt](https://img.shields.io/codeclimate/tech-debt/aureooms/js-red-black-tree.svg)](https://codeclimate.com/github/aureooms/js-red-black-tree/trends/technical_debt)\n[![Documentation](https://aureooms.github.io/js-red-black-tree/badge.svg)](https://aureooms.github.io/js-red-black-tree/source.html)\n[![Package size](https://img.shields.io/bundlephobia/minzip/@aureooms/js-red-black-tree)](https://bundlephobia.com/result?p=@aureooms/js-red-black-tree)\n",
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@aureooms/js-red-black-tree\",\n  \"description\": \"Red-black tree library for JavaScript\",\n  \"version\": \"5.0.0\",\n  \"license\": \"AGPL-3.0\",\n  \"author\": \"Aurélien Ooms <aurelien.ooms@gmail.com>\",\n  \"homepage\": \"https://aureooms.github.io/js-red-black-tree\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aureooms/js-red-black-tree\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/aureooms/js-red-black-tree/issues\"\n  },\n  \"keywords\": [\n    \"balanced binary search tree\",\n    \"bst\",\n    \"data structure\",\n    \"red-black tree\"\n  ],\n  \"sideEffects\": false,\n  \"source\": \"src/index.js\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.module.js\",\n  \"umd:main\": \"dist/index.umd.js\",\n  \"unpkg\": \"dist/index.umd.js\",\n  \"exports\": {\n    \".\": {\n      \"browser\": \"./dist/index.module.js\",\n      \"umd\": \"./dist/index.umd.js\",\n      \"require\": \"./dist/index.js\",\n      \"default\": \"./dist/index.modern.js\"\n    }\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"NODE_ENV=production microbundle\",\n    \"build-docs\": \"esdoc\",\n    \"build-gh-pages\": \"npm run build-docs\",\n    \"ci:test\": \"npm run lint-config && npm run lint && npm run cover\",\n    \"commit-msg\": \"commitlint --edit\",\n    \"cover\": \"c8 --all --src src --reporter=lcov npm test\",\n    \"debug\": \"NODE_ENV=debug npm run test -- -st --fail-fast\",\n    \"dev\": \"npm run lint-config-and-fix && npm run lint-and-fix && npm run cover -- -- -st --fail-fast\",\n    \"install-hooks\": \"husky install\",\n    \"lint\": \"xo\",\n    \"lint-and-fix\": \"npm run lint -- --fix\",\n    \"lint-config\": \"fixpack --dryRun\",\n    \"lint-config-and-fix\": \"fixpack || fixpack\",\n    \"postinstall\": \"npm run install-hooks\",\n    \"postpublish\": \"pinst --enable\",\n    \"precommit\": \"lint-staged\",\n    \"prepare\": \"npm run build\",\n    \"prepublishOnly\": \"pinst --disable\",\n    \"release\": \"np --message ':hatching_chick: release: Bumping to v%s.'\",\n    \"test\": \"ava\"\n  },\n  \"devDependencies\": {\n    \"@aureooms/js-compare\": \"2.0.0\",\n    \"@aureooms/js-itertools\": \"5.1.0\",\n    \"@aureooms/js-random\": \"2.0.0\",\n    \"@babel/core\": \"7.13.13\",\n    \"@babel/preset-env\": \"7.13.12\",\n    \"@babel/register\": \"7.13.8\",\n    \"@commitlint/cli\": \"12.0.1\",\n    \"@js-library/commitlint-config\": \"0.0.4\",\n    \"ava\": \"3.15.0\",\n    \"babel-plugin-transform-remove-console\": \"6.9.4\",\n    \"babel-plugin-unassert\": \"3.0.1\",\n    \"babel-preset-power-assert\": \"3.0.0\",\n    \"c8\": \"7.6.0\",\n    \"chalk\": \"4.1.0\",\n    \"coveralls\": \"3.1.0\",\n    \"esdoc\": \"1.1.0\",\n    \"esdoc-inject-script-plugin\": \"1.0.0\",\n    \"esdoc-inject-style-plugin\": \"1.0.0\",\n    \"esdoc-standard-plugin\": \"1.0.0\",\n    \"fixpack\": \"4.0.0\",\n    \"husky\": \"5.2.0\",\n    \"lint-staged\": \"10.5.4\",\n    \"microbundle\": \"0.13.0\",\n    \"np\": \"7.4.0\",\n    \"pinst\": \"2.1.6\",\n    \"power-assert\": \"1.6.1\",\n    \"regenerator-runtime\": \"0.13.7\",\n    \"xo\": \"0.38.2\"\n  },\n  \"ava\": {\n    \"files\": [\n      \"test/src/**/*\"\n    ],\n    \"require\": [\n      \"regenerator-runtime/runtime\",\n      \"@babel/register\"\n    ],\n    \"timeout\": \"1m\"\n  },\n  \"babel\": {\n    \"sourceMaps\": true,\n    \"presets\": [\n      [\n        \"@babel/preset-env\",\n        {\n          \"targets\": [\n            \"defaults\",\n            \"maintained node versions\"\n          ]\n        }\n      ]\n    ],\n    \"env\": {\n      \"debug\": {\n        \"presets\": [\n          [\n            \"@babel/preset-env\",\n            {\n              \"targets\": \"current node\"\n            }\n          ],\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"test\": {\n        \"presets\": [\n          [\n            \"@babel/preset-env\",\n            {\n              \"targets\": \"current node\"\n            }\n          ],\n          \"babel-preset-power-assert\"\n        ],\n        \"plugins\": [\n          [\n            \"transform-remove-console\",\n            {\n              \"exclude\": [\n                \"log\",\n                \"error\",\n                \"warn\"\n              ]\n            }\n          ]\n        ]\n      },\n      \"development\": {\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ],\n        \"plugins\": [\n          [\n            \"transform-remove-console\",\n            {\n              \"exclude\": [\n                \"log\",\n                \"error\",\n                \"warn\"\n              ]\n            }\n          ]\n        ]\n      },\n      \"production\": {\n        \"plugins\": [\n          \"babel-plugin-unassert\",\n          [\n            \"transform-remove-console\",\n            {\n              \"exclude\": [\n                \"log\",\n                \"error\",\n                \"warn\"\n              ]\n            }\n          ]\n        ]\n      }\n    }\n  },\n  \"lint-staged\": {\n    \"*.js\": [\n      \"npm run lint-and-fix\"\n    ],\n    \"package.json\": [\n      \"npm run lint-config-and-fix\"\n    ]\n  },\n  \"prettier\": {\n    \"trailingComma\": \"all\"\n  },\n  \"xo\": {\n    \"prettier\": true,\n    \"plugins\": [\n      \"unicorn\"\n    ],\n    \"rules\": {\n      \"unicorn/filename-case\": \"off\",\n      \"camelcase\": \"off\",\n      \"unicorn/prevent-abbreviations\": \"off\",\n      \"no-constant-condition\": \"off\",\n      \"unicorn/prefer-math-trunc\": \"off\",\n      \"unicorn/no-new-array\": \"off\",\n      \"no-negated-condition\": \"off\"\n    },\n    \"overrides\": [\n      {\n        \"files\": [\n          \"doc/**\"\n        ],\n        \"env\": \"browser\"\n      }\n    ]\n  }\n}\n",
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/doc/manual/overview.md",
    "name": "./doc/manual/overview.md",
    "content": "# Overview\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/doc/manual/installation.md",
    "name": "./doc/manual/installation.md",
    "content": "# Installation\nCan be managed using\n[jspm](http://jspm.io)\nor [npm](https://github.com/npm/npm).\n\n### jspm\n```terminal\njspm install npm:@aureooms/js-red-black-tree\n```\n\n### npm\n```terminal\nnpm install @aureooms/js-red-black-tree --save\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/doc/manual/usage.md",
    "name": "./doc/manual/usage.md",
    "content": "# Usage\nThe code needs a ES2015+ polyfill to work, for example\n[regenerator-runtime/runtime](https://babeljs.io/docs/usage/polyfill).\n```js\nrequire( 'regenerator-runtime/runtime' ) ;\n// or\nimport 'regenerator-runtime/runtime.js' ;\n```\n\nThen\n```js\nconst { RedBlackTree } = require( '@aureooms/js-red-black-tree' ) ;\n// or\nimport { RedBlackTree } from '@aureooms/js-red-black-tree' ;\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/js-red-black-tree/js-red-black-tree/doc/manual/example.md",
    "name": "./doc/manual/example.md",
    "content": "# Examples\n",
    "static": true,
    "access": "public"
  }
]